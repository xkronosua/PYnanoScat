# IPython log file
from pylab import *
from scipy.signal import square, medfilt

t = np.linspace(0, 1, 500, endpoint=False)
from scipy import signal
signal.square(2 * np.pi * 5 * t)
y=signal.square(2 * np.pi * 5 * t)
y
plot(t,y)
rand(len(t))
k=rand(len(t))
k-=k.mean()
k
y+=k/10
plot(t,y)
y+=k/2
plot(t,y)
plot(t,y,'r', t,medfilt(y,13))
plot(t,y,'r', t,medfilt(y,13))
plot(t,y,'r', t,medfilt(y,13))
plot(t,y,'r', t,medfilt(y,21))
plot(t,y,'r', t,medfilt(y,21))
plot(t,y,'r', t,medfilt(y,41))
plot(t,y,'r', t,medfilt(y,41))
t
t = np.linspace(0, 1, 500, endpoint=False)
y=signal.square(2 * np.pi * 5 * t)
plot(t,y,'r', t,medfilt(y,41))
y1=[]
for i in range(5):
    y1+=[0,1,0]
   
y1
y1=[]
for i in range(5):
    y1+=[0,1,0]
   
x1=arange(0,1,0.1)
x1
y1=array(y1)
plot(x1,y1)
plot(x1,y1)
len(x1)
len(y1)
x1
y1
len(x1)
len(y1)
y1=[]
for i in range(5):
    y1+=[0,1]
    
   
plot(x1,y1)
from scipy import interpolate
x11=arange(0,1,0.01)
y11=interpolate.interp1d(x1,y1)(x11)
x11=arange(0,0.9,0.01)
y11=interpolate.interp1d(x1,y1)(x11)
y11+=k/2
k1=rand(len(x11))
y11+=k/2
y11=interpolate.interp1d(x1,y1)(x11)
y11+=k/2
y11+=k1/2
plot(x11,y11)
y11=interpolate.interp1d(x1,y1)(x11)
y11+=k1/5
plot(x11,y11)
x11=arange(0,0.9,0.001)
y11=interpolate.interp1d(x1,y1)(x11)
k1=rand(len(x11))
y11+=k1/10
plot(x11,y11)
plot(x11,y11)
plot(t,y,x11,y11)
get_ipython().magic('cd work/')
get_ipython().magic('ls ')
get_ipython().magic('cd PYnanoScat/')
get_ipython().magic('ls ')
get_ipython().magic('logstart')
plot(t,y,x11,y11,x1,medfilt(y11))
plot(t,y,x11,y11,x1,medfilt(y11,13))
plot(t,y,x11,y11,x11,medfilt(y11,13))
plot(t,y,x11,y11,x11,medfilt(y11,21))
argmax
argmax(y11)
from scipy.signal import argrelextrema
argrelextrema(y11, np.greater)
g=argrelextrema(y11, np.greater)
l=argrelextrema(y11, np.less)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g=argrelextrema(medfilt(y11,21), np.greater)
l=argrelextrema(medfilt(y11,21), np.less)
l
g
l=argrelextrema(medfilt(y11,30), np.less)
l=argrelextrema(medfilt(y11,13), np.less)
l
l=argrelextrema(medfilt(y11,3), np.less)
l
l=argrelextrema(medfilt(y11,7), np.less)
l
g=argrelextrema(medfilt(y11,7), np.greater)
g
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g=argrelextrema(medfilt(y11,21), np.greater)
g
max_peakind = signal.find_peaks_cwt(y11, np.arange(1,10))
signal.find_peaks_cwt(y11, np.arange(1,10))
g=signal.find_peaks_cwt(y11, np.arange(1,10))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g=signal.find_peaks_cwt(medfilt(y11,21), np.arange(1,10))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g=signal.find_peaks_cwt(medfilt(y11,21), np.arange(1,4))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g=signal.find_peaks_cwt(medfilt(y11,21), np.arange(1,20))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g
diff(y11)
plot(diff(y11))
plot(y11)

    
import peakutils
import peakutils
indexes = peakutils.indexes(y11, thres=0.5, min_dist=30)
indeces
indexes
g = peakutils.indexes(y11, thres=0.5, min_dist=30)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g = peakutils.indexes(y11, thres=0.5, min_dist=50)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g = peakutils.indexes(y11, thres=0.5, min_dist=100)
g = peakutils.indexes(y11, thres=0.9, min_dist=100)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
g = peakutils.indexes(y11, thres=0.9, min_dist=100)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob')
l = peakutils.indexes(-y11, thres=0.9, min_dist=100)
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[l],'or')
import time
import pandas as pd
pd.DataFrame(data=array([x11,y11]),names=['x','y'])
pd.DataFrame(data=array([x11,y11]),columns=['x','y'])
pd.DataFrame(data=array([x11,y11]).T,columns=['x','y'])
ref=pd.DataFrame(data=array([x11,y11]).T,columns=['x','y'])
ref.x
ref.y
signal.find_peaks_cwt(data, np.arange(1,10))
signal.find_peaks_cwt(y11, np.arange(1,10))
g=signal.find_peaks_cwt(y11, np.arange(1,10))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[l],'or')
g=signal.find_peaks_cwt(y11, np.arange(10,15))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[l],'or')
g=signal.find_peaks_cwt(y11, np.arange(10,30))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[l],'or')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[l],'or')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
g=signal.find_peaks_cwt(y11, np.arange(20,30))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
g=signal.find_peaks_cwt(y11, np.arange(20,40))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
l=argrelextrema(medfilt(y11,7)
, np.less)
l=signal.find_peaks_cwt(-y11, np.arange(20,40))
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
time()
time.time()
def calc_peaks(y,width=np.arange(20,40)):
    g = signal.find_peaks_cwt(y, width)
    l = signal.find_peaks_cwt(-y, width)
    return g,l


start=time.time();calc_peaks(y11);end=time.time()
end-start
def calc_peaks(y,width=np.arange(20,40)):
    g = signal.find_peaks_cwt(abs(y-ymean()), width)
    return g
start=time.time();calc_peaks(y11);end=time.time()
def calc_peaks(y,width=np.arange(20,40)):
    g = signal.find_peaks_cwt(abs(y-y.mean()), width)
    return g
start=time.time();calc_peaks(y11);end=time.time()
end-start
start=time.time();calc_peaks(y11,arange(30,40));end=time.time()
len(y11)
y111=y11[::3]
y111
len(y111)
start=time.time();calc_peaks(y111,arange(30,40));end=time.time()
end-start
start=time.time();g=calc_peaks(y111,arange(30,40));end=time.time()
plot(t,y,x11,y11,x11,medfilt(y11,21),x11[g],y11[g],'ob',x11[l],y11[
l],'or')
x111=x11[::3]
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob')
start=time.time();g=calc_peaks(y111,arange(20,40));end=time.time()
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob')
def calc_peaks(y,width=np.arange(20,40)):
    g = signal.find_peaks_cwt(y, width)
    l = signal.find_peaks_cwt(-y, width)
    return g,l


start=time.time();g=calc_peaks(y111,arange(20,40));end=time.time()
end-start
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob')
g,l=g
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob')
plot(t,y,x11,y11,x11,medfilt(y11,21),x111[g],y111[g],'ob',x111[l],y111[
l],'or')
